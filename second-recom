//给商家推荐用户
//假设数据已经完成预处理
//使用逻辑回归模型，判断用户是否会购买某种商品(以收藏浏览推荐为特征，购买为标签)

//第一部分，导入数据到hdfs中
//同第一题

//第二部分，利用数据拟合参数模型
from __future__ import print_function
from pyspark.ml.classification import LogisticRegression
from pyspark.sql import SparkSession

if __name__ == "__main__":
    spark = SparkSession\
        .builder\
        .appName("LogisticRegressionWithElasticNet")\
        .getOrCreate()

    
    # 载入训练数据
    training = spark.read.format("libsvm").load("消费者点击收藏推荐和购买的数据集")/导入数据集

    lr = LogisticRegression(maxIter=N, regParam=N, elasticNetParam=N)//设定参数,N需要被替换

    # 拟合模型
    lrModel = lr.fit(training)

    # 输出参数
    print("Coefficients: " + str(lrModel.coefficients))
    print("Intercept: " + str(lrModel.intercept))
    spark.stop()
    
 //d第三部分，判断是否会购买某种商品
 //得到模型的参数后，根据新的用户的浏览收藏的数据，判断用户的购买意愿。
 
 
 
 
 
 
 
 
 
 //第四部分 推荐给商家
 //通过购买意愿+购买量/浏览次数进行排序
 //将排列前十的用户推送给商家
