//给商家推荐用户
//假设数据已经完成预处理
//使用逻辑回归模型，判断用户是否会购买某种商品(收藏浏览推荐为特征，购买为标签)

from __future__ import print_function


from pyspark.ml.classification import LogisticRegression

from pyspark.sql import SparkSession

if __name__ == "__main__":
    spark = SparkSession\
        .builder\
        .appName("LogisticRegressionWithElasticNet")\
        .getOrCreate()

    
    # 载入训练数据
    training = spark.read.format("libsvm").load("消费者点击收藏推荐和购买的数据集")/导入数据集

    lr = LogisticRegression(maxIter=N, regParam=N, elasticNetParam=N)//设定参数,N需要被替换

    # 拟合模型
    lrModel = lr.fit(training)

    # 输出参数
    print("Coefficients: " + str(lrModel.coefficients))
    print("Intercept: " + str(lrModel.intercept))

    # We can also use the multinomial family for binary classification
    mlr = LogisticRegression(maxIter=10, regParam=0.3, elasticNetParam=0.8, family="multinomial")

    # Fit the model
    mlrModel = mlr.fit(training)

    # Print the coefficients and intercepts for logistic regression with multinomial family
    print("Multinomial coefficients: " + str(mlrModel.coefficientMatrix))
    print("Multinomial intercepts: " + str(mlrModel.interceptVector))
    # $example off$

    spark.stop()
    
 
